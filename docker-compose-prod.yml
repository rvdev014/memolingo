services:
  db:
    image: postgres:17.2-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./_docker/data/postgres:/var/lib/postgresql/data

  php:
    build:
      args:
        user: ${USER}
        uid: ${UID}
      context: .
      dockerfile: _docker/production/php/Dockerfile
    image: ravshan014/memolingo-php:1
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  nginx:
    build:
      context: .
      dockerfile: _docker/production/nginx/Dockerfile
    image: ravshan014/memolingo-nginx:1
    ports:
      - "${APP_PORT}:80"
    depends_on:
      - php

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./_docker/data/pgadmin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      db:
        condition: service_healthy
